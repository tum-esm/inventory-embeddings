[tool.poetry]
name = "inventory-embeddings"
version = "0.1.0"
description = ""
authors = ["must1d"]
readme = "README.md"
packages = [{include = "embeddings"}]

[tool.poetry.dependencies]
python = "^3.11"
ruff = "^0.3.5"
pre-commit = "^3.7.0"
numpy = "^1.26.4"
matplotlib = "^3.8.4"
alive-progress = "^3.1.5"
polars = "^0.20.19"


[tool.poetry.group.torch.dependencies]
torch = "^2.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
preprocess-tno = "embeddings.data_preprocessing.preprocess_tno:preprocess"

[tool.ruff]
line-length = 120
lint.select = [
    "F",
    "E",
    # "C90",
    "W",
    "I",
    "N",
    "UP",
    "YTT",
    "ANN",
    "ASYNC",
    "TRIO",
    # "S",
    "BLE",
    # "FBT",
    "B",
    "A",
    "COM",
    # "CPY",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "EXE",
    "FA",
    "ISC",
    # "FA",
    "ICN",
    "G",
    "INP",
    "PIE",
    # "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ARG",
    "PTH",
    "TD",
    "FIX",
    "ERA",
    "PD",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    "NPY",
    "AIR",
    "PERF",
    # "FURB",
    "LOG",
    "RUF"
]
lint.ignore = [
    "ANN101",   # ANN101 Missing type annotation for `self` in method
    "ANN102",   # ANN101 Missing type annotation for `self` in method
    "FA102",    # FA102 Missing `from __future__ import annotations`, but uses PEP 585 collectio
    "TCH001",   # TCH001 Move application import `...` into a type-checking block
    "INP001",   # INP001 File `...` is part of an implicit namespace package. Add an `__init__.py`.
    "E741",     # E741 Ambiguous variable name: `I`,
    "PLR0913",  # PLR0913 too many arguments
]

